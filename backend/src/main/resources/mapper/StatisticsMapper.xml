<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.gallery.backend.mapper.StatisticsMapper">

    <!-- 카드용 통계 쿼리 -->
    <select id="getMonthlyTotalStats" resultType="com.example.gallery.backend.dto.statistics.Statistics">
        SELECT
            IFNULL(SUM(quantity * (price_at_order * (1 - discount_per / 100))),0) AS totalPrice,
            COUNT(DISTINCT id) AS totalOrders,
            SUM(quantity) AS totalItems
         FROM order_items
        WHERE DATE_FORMAT(created_at, '%Y-%m') = #{yearMonth}
    </select>

    <!-- 일별 -->
    <select id="getDailyStats" parameterType="map" resultType="com.example.gallery.backend.dto.statistics.DailyStat">
        SELECT
            DATE(created_at) AS day,
            SUM(quantity * (price_at_order * (1 - discount_per / 100))) AS total_price
         FROM order_items
        WHERE created_at &gt;= DATE_SUB(STR_TO_DATE(#{date}, '%Y-%m-%d'), INTERVAL #{period} DAY)
          AND created_at &lt; DATE_ADD(STR_TO_DATE(#{date}, '%Y-%m-%d'), INTERVAL 1 DAY)
        GROUP BY DATE(created_at)
        ORDER BY DATE(created_at)
    </select>

    <!-- 주별 -->
    <select id="getWeeklyStats" parameterType="map" resultType="com.example.gallery.backend.dto.statistics.WeeklyStat">
        SELECT
            DATE(created_at) AS day,
            CONCAT(YEAR(created_at), '-', LPAD(WEEK(created_at, 1), 2, '0')) AS week,
            SUM(quantity * (price_at_order * (1 - discount_per / 100))) AS totalPrice
         FROM order_items
        WHERE WEEK(created_at, 1) = WEEK(#{date}, 1)
          AND YEAR(created_at) = YEAR(#{date})
        GROUP BY day, week
        ORDER BY day;
    </select>

    <!-- 월별 -->
    <select id="getMonthlyStats" parameterType="map" resultType="com.example.gallery.backend.dto.statistics.MonthlyStat">
        SELECT
            DATE_FORMAT(created_at, '%Y-%m') AS month,
            SUM(quantity * (price_at_order * (1 - discount_per / 100))) AS total_price
         FROM order_items
        WHERE created_at &gt;= STR_TO_DATE(CONCAT(LEFT(#{date}, 4), '-01-01'), '%Y-%m-%d')
          AND created_at &lt; STR_TO_DATE(CONCAT(CAST(LEFT(#{date}, 4) AS UNSIGNED) + 1, '-01-01'), '%Y-%m-%d')
        GROUP BY month
        ORDER BY month;
    </select>


    <!-- 상품별(월별 상품별) -->
    <select id="getProductStats" parameterType="map" resultType="com.example.gallery.backend.dto.statistics.ProductStat">
        SELECT
            p.name AS productName,
            SUM(oi.quantity) AS quantity,
            SUM(oi.quantity * (oi.price_at_order * (1 - oi.discount_per / 100))) AS totalSales
        FROM order_items oi
        JOIN products p
          ON oi.product_id = p.id
        WHERE DATE_FORMAT(oi.created_at, '%Y-%m') = #{date}
        GROUP BY p.name
        ORDER BY totalSales DESC
    </select>
</mapper>
