<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.gallery.backend.mapper.StatisticsMapper">

    <resultMap id="StatisticsResultMap" type="com.example.gallery.backend.dto.statistics.Statistics">
        <result property="totalPrice" column="total_price"/>
        <result property="totalOrders" column="total_orders"/>
        <result property="totalItems" column="total_items"/>
    </resultMap>

    <resultMap id="MonthlyStatResultMap" type="com.example.gallery.backend.dto.statistics.ChartStat">
        <result property="month" column="month" />
        <result property="totalPrice" column="total_price" />
    </resultMap>

    <!-- 카드용 통계 쿼리 -->
    <select id="getMonthlyTotalStats" resultType="com.example.gallery.backend.dto.statistics.Statistics">
        SELECT
            IFNULL(SUM(quantity * (price_at_order * (1 - discount_per / 100))),0) AS totalPrice,
            COUNT(DISTINCT id) AS totalOrders,
            SUM(quantity) AS totalItems
        FROM order_items
        WHERE DATE_FORMAT(created_at, '%Y-%m') = #{yearMonth}
    </select>

    <!-- 일별/주별/월별 조회 쿼리 -->
<!--    <select id="getSalesStats" parameterType="map" resultType="Statistics">-->
<!--        SELECT-->
<!--            SUM(quantity * (price_at_order * (1 - discount_per / 100))) AS total_price-->
<!--            ,COUNT(id) AS total_orders-->
<!--            ,SUM(quantity) AS total_items-->
<!--        FROM order_items-->
<!--        <where>-->
<!--            <choose>-->
<!--                <when test="type == 'daily'">-->
<!--                    <![CDATA[-->
<!--                    DATE(created_at) BETWEEN DATE_SUB(STR_TO_DATE(#{date}, '%Y-%m-%d'), INTERVAL #{period} DAY)-->
<!--                    AND STR_TO_DATE(#{date}, '%Y-%m-%d')-->
<!--                ]]>-->
<!--                </when>-->
<!--                <when test="type == 'weekly'">-->
<!--                    <![CDATA[-->
<!--                    YEARWEEK(DATE(created_at), 1) BETWEEN YEARWEEK(DATE_SUB(STR_TO_DATE(#{date}, '%Y-%m-%d'), INTERVAL #{period} WEEK), 1)-->
<!--                    AND YEARWEEK(STR_TO_DATE(#{date}, '%Y-%m-%d'), 1)-->
<!--                ]]>-->
<!--                </when>-->
<!--                <when test="type == 'monthly'">-->
<!--                    <![CDATA[-->
<!--                    DATE_FORMAT(created_at, '%Y-%m') = #{date}-->
<!--                ]]>-->
<!--                </when>-->
<!--            </choose>-->
<!--        </where>-->
<!--    </select>-->

    <!-- 일별 -->
    <select id="getDailyStats" parameterType="map" resultType="com.example.gallery.backend.dto.statistics.DailyStat">
        SELECT
            DATE(created_at) AS day,
            SUM(quantity * (price_at_order * (1 - discount_per / 100))) AS total_price
        FROM order_items
        WHERE created_at &gt;= DATE_SUB(STR_TO_DATE(#{date}, '%Y-%m-%d'), INTERVAL #{period} DAY)
        AND created_at &lt; DATE_ADD(STR_TO_DATE(#{date}, '%Y-%m-%d'), INTERVAL 1 DAY)
        GROUP BY DATE(created_at)
        ORDER BY DATE(created_at)
    </select>

    <!-- 주별 -->
    <select id="getWeeklyStats" parameterType="map" resultType="com.example.gallery.backend.dto.statistics.WeeklyStat">
        SELECT
            DATE(created_at) AS day,
            DATE_FORMAT(created_at, '%x-%v') AS week,
            SUM(quantity * (price_at_order * (1 - discount_per / 100))) AS totalPrice
        FROM order_items
        WHERE created_at &gt;= STR_TO_DATE(DATE_FORMAT(#{date} - INTERVAL (DAYOFWEEK(#{date}) + 5) % 7 DAY, '%Y-%m-%d'), '%Y-%m-%d') -- 주 시작일
        AND created_at &lt;  STR_TO_DATE(DATE_FORMAT(#{date} - INTERVAL (DAYOFWEEK(#{date}) + 5) % 7 - 6 DAY, '%Y-%m-%d'), '%Y-%m-%d') + INTERVAL 1 DAY -- 주 종료일 +1
        GROUP BY day, week
        ORDER BY day;
    </select>

    <!-- 월별 -->
    <select id="getMonthlyStats" parameterType="map" resultType="com.example.gallery.backend.dto.statistics.MonthlyStat">
        SELECT
            DATE_FORMAT(created_at, '%Y-%m') AS month,
            SUM(quantity * (price_at_order * (1 - discount_per / 100))) AS total_price
        FROM order_items
        WHERE created_at &gt;= DATE_SUB(STR_TO_DATE(CONCAT(#{date}, '-01'), '%Y-%m-%d'), INTERVAL #{period} MONTH)
          AND created_at &lt; DATE_ADD(STR_TO_DATE(CONCAT(#{date}, '-01'), '%Y-%m-%d'), INTERVAL 1 MONTH)
        GROUP BY DATE_FORMAT(created_at, '%Y-%m')
        ORDER BY DATE_FORMAT(created_at, '%Y-%m')
    </select>


    <!-- 상품별(월별 상품별) -->
    <select id="getProductStats" parameterType="map" resultType="com.example.gallery.backend.dto.statistics.ProductStat">
        SELECT
            p.name AS productName,
            SUM(oi.quantity) AS quantity,
            SUM(oi.quantity * (oi.price_at_order * (1 - oi.discount_per / 100))) AS totalSales
        FROM order_items oi
        JOIN products p
          ON oi.product_id = p.id
        WHERE DATE_FORMAT(oi.created_at, '%Y-%m') = #{date}
        GROUP BY p.name
        ORDER BY totalSales DESC
    </select>
</mapper>
